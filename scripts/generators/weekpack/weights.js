const { WIDTH, HEIGHT, MARGIN, rndInt, headerSVG, wrapSVG } = require('../common');

function pageWeights(pageNum) {
  // 4 –∑–≤–µ—Ä—è-—ç–º–æ–¥–∑–∏ –∏ –∏—Ö —Å–ª—É—á–∞–π–Ω—ã–µ –≤–µ—Å–∞ 1‚Äì9 –∫–≥
  const animals = [
    { emoji: 'ü¶é', w: rndInt(1, 4) },
    { emoji: 'üê¢', w: rndInt(2, 6) },
    { emoji: 'üêä', w: rndInt(5, 9) },
    { emoji: 'ü¶Ä', w: rndInt(1, 4) },
  ];
  // –ü–µ—Ä–µ–Ω–µ—Å—ë–º –ª–µ–≥–µ–Ω–¥—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–µ –Ω–∞–µ–∑–∂–∞–ª–∞ –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫/–ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
  const legendY = 210;
  let content = headerSVG({ title: '–°–ö–û–õ–¨–ö–û –í–ï–°–ò–¢?', subtitle: '–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –ª–µ–≥–µ–Ω–¥—É —Å–≤–µ—Ä—Ö—É –∏ –ø–æ–¥–ø–∏—à–∏ –≤–µ—Å –Ω–∞ –¥–∏—Å–ø–ª–µ–µ –≤–µ—Å–æ–≤.', pageNum });

  // –õ–µ–≥–µ–Ω–¥–∞
  const lx = MARGIN + 10;
  animals.forEach((a, i) => {
    const x = lx + i * 180;
    content += `<g>
      <text x="${x}" y="${legendY}" font-size="48">${a.emoji}</text>
      <text x="${x + 74}" y="${legendY}" font-family="Arial, sans-serif" font-size="24">${a.w} –∫–≥</text>
    </g>`;
  });

  // –†–∏—Å—É–Ω–æ–∫ –≤–µ—Å–æ–≤
  function scaleSVG(x, y, labelEmojis) {
    const trayW = 340, trayH = 14;
    return `
      <g>
        <rect x="${x - trayW/2}" y="${y}" width="${trayW}" height="${trayH}" rx="6" fill="#555"/>
        <rect x="${x - 200}" y="${y + 14}" width="400" height="190" rx="18" fill="#777"/>
        <rect x="${x - 130}" y="${y + 60}" width="260" height="70" rx="12" fill="#fff" stroke="#ccc"/>
        <text x="${x}" y="${y - 20}" font-size="54" text-anchor="middle">${labelEmojis}</text>
        <text x="${x}" y="${y + 112}" text-anchor="middle" font-family="Arial, sans-serif" font-size="28" fill="#999">?</text>
      </g>`;
  }

  // 4 –∑–∞–¥–∞–Ω–∏—è —Å–µ—Ç–∫–æ–π 2x2 ‚Äî –∫–∞–∂–¥—ã–µ –≤–µ—Å—ã: 2‚Äì3 –†–ê–ó–ù–´–• –∑–≤–µ—Ä—è
  const sx = WIDTH / 2;
  const top = 310; // –±–æ–ª—å—à–µ –æ—Ç—Å—Ç—É–ø–∞ —Å–≤–µ—Ä—Ö—É –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤—ã–º –ø—Ä–∏–º–µ—Ä–æ–º
  const dy = 300;

  function pickCombo() {
    const k = rndInt(2, 3);
    const idxs = [0,1,2,3].sort(() => Math.random() - 0.5).slice(0, k);
    const em = idxs.map(i => animals[i].emoji).join('');
    return em;
  }

  const usedCombos = new Set();
  const combos = [];
  while (combos.length < 6) {
    const em = pickCombo();
    if (!usedCombos.has(em)) { usedCombos.add(em); combos.push(em); }
  }

  for (let i = 0; i < 6; i++) {
    const cx = i % 2 === 0 ? sx - 220 : sx + 220;
    const cy = top + Math.floor(i / 2) * dy;
    content += scaleSVG(cx, cy, combos[i]);
  }

  content += `<text x="${WIDTH - 12}" y="${HEIGHT - 10}" text-anchor="end" font-family="Arial, sans-serif" font-size="12" fill="#777">–í–µ—Å—ã ‚Ä¢ –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è</text>`;
  return wrapSVG(content);
}

module.exports = { pageWeights };
